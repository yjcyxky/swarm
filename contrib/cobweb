#!/bin/bash
# -----------------------------------------------------------
#  Copyright (C) 2017 Nordata.
#  Website: nordata.com.cn
#
#  Swarm platform is developed by the Nordata company.
#  See the license for more details.
#  Author: Jingcheng Yang <yjcyxky@163.com>

GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[0;33m'
NC='\033[0m' # No Color
ERROR=false

show_help(){
cat << EOF
usage: $(echo $0) [-c] [-s <software>]
	-c 使用conda.
	-S 仅搜寻软件包.
	-s 软件名，字符串必须为software_name=version形式.
EOF
}

install_software() {
	OUTPUT_JSON=`conda create --json --quiet -n ${software_name} ${software}`
	SUCCESS=`echo $OUTPUT_JSON | jq '.success'`
	export ERROR_MSG=`echo $OUTPUT_JSON | jq '.error'`
	if [ "$SUCCESS" != 'true' ];then
		export ERROR=true
	else
		export ERROR=false
	fi
}

search_software() {
	conda search ${software_name}
}

gen_conda_modulefile() {
cat <<- EOF > /opt/local/share/modulefiles/${software_name}
#%Module1.0
module-whatis ""
prepend-path PATH /opt/local/cobweb/envs/${software_name}/bin
prepend-path LD_LIBRARY_PATH /opt/local/cobweb/envs/${software_name}/lib
prepend-path MANPATH /opt/local/cobweb/envs/${software_name}/man
prepend-path INFOPATH /opt/local/cobweb/envs/${software_name}/info
prepend-path INCLUDEPATH /opt/local/cobweb/envs/${software_name}/include
EOF

	printf "${GREEN}安装${software_name}成功...${NC}\n"
	printf "安装路径：${GREEN}/opt/local/cobweb/envs/${software_name}${NC}\n"
	printf "${GREEN}使用方法：module load ${software_name}${NC}\n"
}

gen_modulefile() {
	modulefile=/opt/local/share/modulefiles/${software_name}
	if [ -f "${modulefile}" ];then
		printf "${RED}${modulefile}已经存在...${NC}\n"
		exit 2
	fi
	cat <<- EOF > ${modulefile}
#%Module1.0
module-whatis ""
prepend-path PATH /opt/local/softwares/${software_name}/bin
prepend-path LD_LIBRARY_PATH /opt/local/softwares/${software_name}/lib
prepend-path MANPATH /opt/local/softwares/${software_name}/man
prepend-path INFOPATH /opt/local/softwares/${software_name}/info
prepend-path INCLUDEPATH /opt/local/softwares/${software_name}/include
EOF

	printf "${GREEN}安装${software_name}成功...${NC}\n"
	printf "安装路径：${GREEN}/opt/local/softwares/${software_name}${NC}\n"
	printf "${GREEN}使用方法：module load ${software_name}${NC}\n"
}

show_error() {
	printf "${RED}安装$software失败，详情请查看出错日志！${NC}\n"
	printf "${RED}$ERROR_MSG${NC}\n"
	exit 1
}

while getopts ":hcSs:" arg
do
	case "$arg" in
		"c")
			use_conda="yes"
			;;
		"S")
			search_mode="yes"
			;;
		"s")
			software="$OPTARG"
			;;
		"?")
			echo "Unkown option: $OPTARG"
			exit 1
			;;
		":")
			echo "No argument value for option $OPTARG"
			;;
		h)
			show_help
			exit 0
			;;
		*)
			echo "Unknown error while processing options"
			show_help
			exit 1
			;;
	esac
done

# 识别是否安装jq
type jq >/dev/null 2>&1 || { echo >&2 "依赖jq，但未安装，请执行'yum install jq'安装此依赖软件.  Aborting."; exit 1; }

# use conda时，-s参数不能为空
if [ -z "${software}" ];then
	printf "${RED}必须指定-s参数，且值必须是software_name=version形式.${NC}\n"
	exit 1
fi

# 匹配输入模式
export matched_str=`echo $software | grep -E '[a-zA-Z0-9\-\_\.]+=[a-zA-Z0-9\-\_\.\*]+'`
software_name=${software//=/-}

if [ "${software_name}" == "${software}" ] || [ -z $matched_str ]; then
	printf "${RED}-s参数的值必须是software_name=version形式.${NC}\n"
	exit 1
fi

if [ ! -z "$use_conda" ];then
	software_path=/opt/local/cobweb/envs/${software_name}
	if [ -d "$software_path" ];then
		printf "${RED}$software_path已经存在，请删除后重试...${NC}\n"
		exit 3
	fi
	# 提示用户输入Yes或者No，以便继续运算或者结束
	printf "安装软件${software_name}?(yes|no): "
	read yesorno
	case "$yesorno" in
		[yY]|[Yy][eE][sS])
		    printf "$GREEN正在安装... ...$NC\n"
			install_software
			;;
		[nN]|[Nn][oO])
			exit 1
			;;
	esac

	if $ERROR; then
		show_error;
	else
		gen_conda_modulefile;
	fi
elif [ ! -z "$search_mode" ];then
	printf "${GREEN}搜索${software_name}...\n${NC}"
	printf "${YELLOW}"
	search_software
	printf "${NC}"
else
	# 提示用户输入Yes或者No，以便继续运算或者结束
	printf "${GREEN}当前软件为手动安装，安装路径: /opt/local/softwares/${software_name}\n${NC}"
	printf "生成modulefile：软件${software_name}?(yes|no): "
	read yesorno
	case "$yesorno" in
		[yY]|[Yy][eE][sS])
			gen_modulefile;
			;;
		[nN]|[Nn][oO])
			exit 1
			;;
	esac
fi
